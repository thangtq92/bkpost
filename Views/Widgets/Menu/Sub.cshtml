@using NB_Commerce.Model.Models
@model MenuCategory

@if (Model.Id > 0)
{
    if(!string.IsNullOrEmpty(Model.StyleContent)) {
        <style>
            @Model.StyleContent
        </style>
    }
    <ul id="menu-@ViewBag.Instance" style="@ViewBag.CustomStyles" class="@Model.ClassApplied data-block @Model.Identifier">
        
        @foreach (var mlcm in Model.MenuLinkCategoryMappings.Where(e => e.ParentId == null && e.IsActive).OrderBy(e => e.DisplayOrder))
        {
            <li @(mlcm.MenuLinkCategoryChildren.Count == 0 ? "" : "class=dropdown")>
                @if(!string.IsNullOrEmpty(mlcm.Icon)) {
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                       @Html.Raw(mlcm.Icon)
                    </a>
                }
                else {
                    var mlcmHref = "";
                    if (string.IsNullOrEmpty(mlcm.HashTag))
                    {
                        mlcmHref = mlcm.UrlRewrite.Slug == "/" ? (SessionManager.GetUniqueSeoCode + "/") : (SessionManager.GetUniqueSeoCode + "/" + mlcm.UrlRewrite.Slug);
                    }
                    else { mlcmHref = mlcm.HashTag; }
                    <a title="@mlcm.UrlRewrite.Title" href="@mlcmHref" target="@mlcm.Target" > @Html.Raw(mlcm.Icon) @(mlcm.Alias ?? mlcm.UrlRewrite.Title) </a>
                }
                @if (mlcm.MenuLinkCategoryChildren.Count > 0)
                {
                        <ul class="dropdown-menu">
                            @foreach (var mlcmChild in mlcm.MenuLinkCategoryChildren.Where(e => e.IsActive).OrderBy(e => e.DisplayOrder))
                            {
                                <li @(mlcmChild.MenuLinkCategoryChildren.Count == 0 ? "" : "class=dropdown-submenu") >
                                    @{
                                        var mlcmChildHref = "";
                                        if (string.IsNullOrEmpty(mlcmChild.HashTag))
                                        {
                                               mlcmChildHref = mlcmChild.UrlRewrite.Slug == "/" ? (SessionManager.GetUniqueSeoCode + "/") : (SessionManager.GetUniqueSeoCode + "/" + mlcmChild.UrlRewrite.Slug);
                                        }
                                        else { mlcmChildHref = mlcmChild.HashTag; }       
                                    }
                                    <a title="@mlcmChild.UrlRewrite.Title" href="@mlcmChildHref" target="@mlcmChild.Target">@Html.Raw(mlcmChild.Icon) @(mlcmChild.Alias ?? mlcmChild.UrlRewrite.Title) </a>
                                    @if (mlcmChild.MenuLinkCategoryChildren.Count > 0)
                                    {
                                        <ul class="dropdown-menu">
                                            @foreach (var mlcmGrandchild in mlcmChild.MenuLinkCategoryChildren.Where(e => e.IsActive).OrderBy(e => e.DisplayOrder))
                                            {
                                                var mlcmGrandchildHref = "";
                                                if (string.IsNullOrEmpty(mlcmGrandchild.HashTag))
                                                {
                                                    mlcmGrandchildHref = mlcmGrandchild.UrlRewrite.Slug == "/" ? (SessionManager.GetUniqueSeoCode + "/") : (SessionManager.GetUniqueSeoCode + "/" + mlcmGrandchild.UrlRewrite.Slug);
                                                }
                                                else { mlcmGrandchildHref = mlcmGrandchild.HashTag; }  
                                                <li>
                                                    <a title="@mlcmGrandchild.UrlRewrite.Title"  href="@mlcmGrandchildHref"  target="@mlcmGrandchild.Target">@Html.Raw(mlcmGrandchild.Icon) @(mlcmGrandchild.Alias ?? mlcmGrandchild.UrlRewrite.Title) </a>
                                                </li>
                                            }
                                        </ul>
                                    }
                               
                                </li>
                            }
                        </ul>
                    
                }
            </li>
        }
    </ul>
}
