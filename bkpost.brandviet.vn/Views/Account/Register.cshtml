@{
    ViewBag.Title = "Đăng ký tài khoản";
}
@using NB_Commerce.Helpers
@using NB_Commerce.Models
@model NB_Commerce.Models.RegisterModel
@Styles.Render("~/bundles/content/default/account/css", "~/bundles/content/default/account/register/css")
@Html.Action("Breadcrumb", "Widgets", new {breadcrumbs = new List<BreadcrumbModel> {new BreadcrumbModel {Link = "#", Title = "Đăng ký"}}, homeIncluded = true, area = ""})

<div class="row register account">
    
    <div class="col-xs-4 register-via col-left">
        <h4>Đăng ký qua</h4>
        <div>
            @Html.ActionLink("Login with Facebook", "Facebook", null, htmlAttributes: new {@class = "facebook"})
            @Html.ActionLink("Login with Facebook", "Google", null, htmlAttributes: new {@class = "google"})
        </div>
    </div>
    
    <div class="col-xs-8 register-directly col-right">
          <h4>Đăng ký trực tiếp</h4>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post))
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            <div class="control-group">
                @Html.LabelFor(model => model.UserName, new {@class="control-label required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.UserName, null, new { placeholder = "Tên đăng nhập" })
                    @Html.ValidationMessageFor(model => model.UserName)
                    <span class="help-inline" title="Tên đăng nhập sử dụng để hiển thị trên hệ thống đánh giá, thông tin tài khoản..."></span>
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Email, new {@class="control-label required" })
                <div class="controls">
                     @Html.TextBoxFor(model => model.Email, null, new { placeholder = "emailcuaban@xyz.com", type="email" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Password, new {@class="control-label required" })
                <div class="controls">
                    @Html.PasswordFor(model => model.Password, new { placeholder = "**************" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.ConfirmPassword, new {@class="control-label required" })
                <div class="controls">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { placeholder = "************" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>
            </div>
            <hr/>
            
            <div class="control-group">
                @Html.LabelFor(model => model.FullName, new {@class="control-label required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.FirstName, null ,new {@class="first-name", placeholder="Họ và đệm" }) @Html.TextBoxFor(model => model.LastName, null ,new {@class="last-name", placeholder="Tên" })
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>
            
            <div class="control-group">
                @Html.LabelFor(model => model.Gender, new {@class="control-label" })
                <div class="controls">
                    @Html.EnumDropDownListFor(model => model.Gender)
                    @Html.ValidationMessageFor(model => model.Gender)
                </div>
            </div>
            
            <div class="control-group">
                @Html.LabelFor(model => model.DateOfBirth, new {@class="control-label" })
                <div class="controls">
                    <select id="Day" name ="Day" style="width: 75px;">
                        <option disabled selected value="01">-dd-</option>
                        @for(var d = 1; d<= 31; d++) {
                            <option value="@d" @(Model.Day == d ? "selected": "")>@(d < 10 ? ("0"+d) : (""+d))</option>
                        }
                    </select>
                    \
                    <select id="Month" name ="Month">
                        <option value="01">-MM-</option>
                        @for(var m = 1; m<= 12; m++) {
                            <option value="@m" @(Model.Month == m ? "selected": "")>@(m < 10 ? ("0"+m) : (""+m))</option>
                        }
                    </select>
                    \
                    <select id="Year" name ="Year">
                        <option value="0001">--yyyy--</option>
                        @for(var y = 1979; y<= 2000; y++) {
                            <option value="@y" @(Model.Year == y ? "selected": "")>@(y)</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.DateOfBirth)
                </div>
            </div>
            
            <hr/>
                
                <div class="checkbox">
                    <label for="Agree" style="font-weight: normal;">
                        <input id="Agree" name="Agree" checked="checked" value="true" type="checkbox"/> <span class="ripple"></span><span class="check"></span>
                        Tôi đã đọc và đồng ý với <a href="#"> điều khoản</a> sử dụng
                    </label>
                </div>
                <button class="pull-right" type="submit"><i class="fa fa-sign-in"></i>  Đăng ký</button>
            
        }
    </div>
</div>

@section scripts
{
    <script src="~/Content/Plugins/password-strenght/jquery.passstrength.js"></script>
    <script>
        $(document).ready(function () {
            $('html, body').animate({ scrollTop: 472 }, 100);
            $('input#Password:first-child').passStrengthify({
                labels: { // text for labels
                    passwordStrength: 'Strength:',
                    tooShort: ''
                }
            });
        });
    </script>
}